<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mybatis3.mapper.CourseMapper">

    <!--
        2nd Level Cache，同一个 namespace 下的 statement 的缓存，可以在不同的 SqlSession 对象之间起作用。
        readOnly 的默认值是 false，即使用的是 read-write cache，对缓存对象使用『序列化』与『反序列化』来返回不同的对象。因此
        要求实体类要实现 Serializable 接口。
    -->
    <cache eviction="FIFO" flushInterval="60000" size="512" readOnly="false"/>

    <resultMap type="Course" id="CourseResultMap">
        <id column="course_id" property="courseId"/>
        <result column="name" property="name"/>
        <result column="description" property="description"/>
        <result column="start_date" property="startDate"/>
        <result column="end_date" property="endDate"/>
    </resultMap>

    <select id="selectCoursesByTutor" parameterType="int" resultMap="CourseResultMap">
        SELECT *
        FROM course
        WHERE tutor_id = #{tutorId}
    </select>

    <select id="searchCourses" parameterType="hashmap" resultMap="CourseResultMap" useCache="false">
        SELECT * FROM course
        WHERE tutor_id = #{tutorId}
        <if test="courseName != null">
            AND name like #{courseName}
        </if>
        <if test="startDate != null">
            AND start_date &gt;= #{startDate}
        </if>
        <if test="endDate != null">
            AND end_date &lt;= #{endDate}
        </if>

    </select>

    <select id="searchCoursesByTutors" parameterType="hashmap" resultMap="CourseResultMap">
        SELECT * FROM course
        <if test="tutorIds != null">
            <where>
                tutor_id IN
                <foreach item="tutorId" collection="tutorIds"
                         open="(" separator="," close=")">
                    #{tutorId}
                </foreach>
            </where>
        </if>
    </select>

</mapper>